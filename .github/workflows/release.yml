name: Auto Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run format check
        run: npm run format:check

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Determine version bump
        id: version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Parse version components
          if [[ $CURRENT_VERSION =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)(-beta)?$ ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=${BASH_REMATCH[3]}
            IS_BETA=${BASH_REMATCH[4]}
          else
            echo "Invalid version format"
            exit 1
          fi

          # Increment patch version
          NEW_PATCH=$((PATCH + 1))

          # Create new version
          if [[ -n "$IS_BETA" ]]; then
            NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}-beta"
          else
            NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
          fi

          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version in package.json
        run: |
          npm version ${{ steps.version.outputs.new_version }} --no-git-tag-version
          git add package.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Sophia CLI v${{ steps.version.outputs.new_version }}
          body: |
            ## Sophia CLI v${{ steps.version.outputs.new_version }}

            ### Installation
            ```bash
            bash -c "$(curl -fsSL https://raw.githubusercontent.com/samueldervishii/sophia-cli/main/install.sh)"
            ```

            ### What's Changed
            - Auto-generated release from main branch
            - Bug fixes and improvements

            ### Full Changelog
            See commit history for detailed changes.
          draft: false
          prerelease: ${{ contains(steps.version.outputs.new_version, 'beta') }}

      - name: Push changes
        run: |
          git push origin main
          git push origin v${{ steps.version.outputs.new_version }}
